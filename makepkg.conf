#!/hint/bash
# shellcheck disable=2034

#
# /etc/makepkg.conf
#

#########################################################################
# SOURCE ACQUISITION
#########################################################################
#
#-- The download utilities that makepkg should use to acquire sources
#  Format: 'protocol::agent'
DLAGENTS=(
        'file::/usr/bin/curl -qgC - -o %o %u'
        'ftp::/usr/bin/aria2c -UWget -s4 %u -o %o'
        'http::/usr/bin/aria2c -UWget -s4 %u -o %o'
        'https::/usr/bin/aria2c -UWget -s4 %u -o %o'
        'rsync::/usr/bin/rsync --no-motd -z %u %o'
        'scp::/usr/bin/scp -C %u %o'
        'rsync::/usr/bin/rsync --no-motd -z %u %o'
)

# Other common tools:
# /usr/bin/snarf
# /usr/bin/lftpget -c
# /usr/bin/wget

#-- The package required by makepkg to download VCS sources
#  Format: 'protocol::package'
VCSCLIENTS=('bzr::breezy'
            'fossil::fossil'
            'git::git'
            'hg::mercurial'
            'svn::subversion')
  
#########################################################################
# EXPORT FLAGS
#########################################################################
export CC="/usr/bin/clang"
export CXX="/usr/bin/clang++"
export CC_LD="/usr/bin/ld.lld"
export CXX_LD="/usr/bin/ld.lld"
export LD="/usr/bin/ld.lld"
export AR="/usr/bin/llvm-ar"
export NM="/usr/bin/llvm-nm"
export STRIP="/usr/bin/llvm-strip"
export OBJCOPY="/usr/bin/llvm-objcopy"
export OBJDUMP="/usr/bin/llvm-objdump"
export READELF="/usr/bin/llvm-readelf"
export RANLIB="/usr/bin/llvm-ranlib"
export HOSTCC="/usr/bin/clang"
export HOSTCXX="/usr/bin/clang++"
export HOSTAR="/usr/bin/llvm-ar"
export HOSTLD="/usr/bin/ld.lld"
export QMAKESPEC=linux-clang
export PROFILE=release
#########################################################################
# ARCHITECTURE, COMPILE FLAGS
#########################################################################
#
CARCH="x86_64"
CHOST="x86_64-pc-linux-gnu"

#-- Compiler and Linker Flags
_custom_cflags=""
_custom_cxxflags=""
_custom_ldflags=""
_custom_rustc=""

_default="-Qunused-arguments -ffunction-sections -fdata-sections -fdiagnostics-color=always -pipe -fstack-protector -fstack-clash-protection"
_flags="-fslp-vectorize -fvectorize -funroll-loops -mfpmath=sse"

_pass1="-mllvm --enable-interleaved-mem-accesses -mllvm --enable-ipra -mllvm --enable-local-reassign -mllvm --enable-loop-flatten -mllvm --enable-loopinterchange"
_pass2="-mllvm --enable-loop-versioning-licm -mllvm --enable-lsr-phielim -mllvm --enable-matrix -mllvm --enable-mem-access-versioning -mllvm --enable-memcpy-dag-opt"
_pass3="-mllvm --enable-memprof-context-disambiguation -mllvm --enable-misched -mllvm --enable-module-inliner  -mllvm --enable-mve-interleave -mllvm --enable-partial-inlining -mllvm --enable-post-misched"
_cse="-mllvm --enable-cse-in-irtranslator -mllvm --enable-cse-in-legalizer"
_opt="-mllvm --aggressive-ext-opt -mllvm --hoist-common-insts -mllvm --hoist-const-loads -mllvm --isel-rebalance-addr -mllvm --lower-interleaved-accesses -mllvm --rebalance-only-imbal"
_opt1="-mllvm --rebalance-only-opt -mllvm --rdf-opt -mllvm --reassociate-geps-verify-no-dead-code -mllvm --reassociate-use-cse-local -mllvm --scalarize-load-store -mllvm --scev-verify-ir -mllvm --scheditins"
_opt2="-mllvm --schedmodel -mllvm --branch-fold-placement -mllvm --enable-chr -mllvm --enable-knowledge-retention -mllvm --loop-rotate-multi -mllvm --enable-if-conversion -mllvm --inline-enable-cost-benefit-analysis -mllvm --scalar-evolution-use-expensive-range-sharpening -mllvm --scalarize-load-store -mllvm --enable-gvn-hoist -mllvm --enable-cond-stores-vec"
_loop="-mllvm --enable-loopinterchange -mllvm --enable-loop-distribute -mllvm --enable-unroll-and-jam -mllvm --unroll-runtime-multi-exit -mllvm --interleave-loops -mllvm --slp-vectorize-hor -mllvm --slp-vectorize-hor-store -mllvm --vectorize-slp -mllvm --vectorize-loops -mllvm --enable-masked-interleaved-mem-accesses -mllvm --loop-fusion-dependence-analysis=all"
_loop1=" -mllvm --loop-distribute-verify -mllvm --loop-flatten-widen-iv -mllvm --enable-split-loopiv-heuristic -mllvm --extra-vectorizer-passes"
_llvm="$_pass1 $_pass2 $_pass3 $_cse $_opt $_opt1 $_opt2 $_loop $_loop1 -mllvm --global-isel -mllvm --fast-isel -mllvm --verify-machineinstrs -mllvm --verify-coalescing -mllvm --verify-regalloc"

_polly="-mllvm --polly -mllvm --enable-polly-aligned -mllvm --polly-2nd-level-tiling -mllvm --polly-detect-profitability-min-per-loop-insts=40 -mllvm --polly-run-dce -mllvm --polly-ast-detect-parallel -mllvm --polly-ast-print-accesses -mllvm --polly-ast-use-context -mllvm --polly-check-parallel -mllvm --polly-check-vectorizable -mllvm --polly-delinearize -mllvm --polly-optree-analyze-known -mllvm --polly-dependences-use-reductions -mllvm --polly-enable-delicm -mllvm --polly-enable-mse -mllvm --polly-enable-optree -mllvm --polly-detect-reductions -mllvm --polly-enable-prune-unprofitable -mllvm --polly-optree-analyze-known  -mllvm --polly-enable-simplify -mllvm --polly-register-tiling -mllvm --polly-reschedule -mllvm --polly-postopts -mllvm --polly-pattern-matching-based-opts -mllvm --polly-optree-normalize-phi -mllvm --polly-tc-opt -mllvm --polly-use-llvm-names -mllvm --polly-tiling -mllvm --polly-invariant-load-hoisting -mllvm --polly-vectorizer=stripmine"

_llvm_lld="-Wl,--lto-O3 -Wl,-mllvm,-extra-vectorizer-passes -Wl,-mllvm,-enable-cond-stores-vec -Wl,-mllvm,-slp-vectorize-hor-store -Wl,-mllvm,-enable-loopinterchange -Wl,-mllvm,-enable-loop-distribute -Wl,-mllvm,-enable-unroll-and-jam -Wl,-mllvm,-enable-loop-flatten -Wl,-mllvm,-enable-masked-interleaved-mem-accesses -Wl,-mllvm,-aggressive-ext-opt"
_polly_lld=" -Wl,-mllvm,-polly -Wl,-mllvm,-polly-detect-profitability-min-per-loop-insts=40"

_compiler="$_default -O2 -march=x86-64-v3 $_flags $_polly $_llvm $_cse $_opt"

_linker="-Wl,-O4 -Wl,-z,now -Wl,-z,relro -Wl,--as-needed -Wl,--no-copy-dt-needed-entries -Wl,--gc-sections -Wl,--lto-O3 -Wl,--icf=safe -Wl,--hash-style=gnu"

_ldrust="-C link-arg=-Wl,-O4 -C link-arg=-Wl,-z,now -C link-arg=-Wl,-z,relro -C link-arg=-Wl,--as-needed -C link-arg=-Wl,--no-copy-dt-needed-entries -C link-arg=-Wl,--gc-sections -C link-arg=-Wl,--lto-O3 -C link-arg=-Wl,--icf=safe -C link-arg=-Wl,--hash-style=gnu"
_rpoly="-Cllvm-args=--polly -Cllvm-args=--polly-pattern-matching-based-opts -Cllvm-args=--polly-detect-full-functions -Cllvm-args=--polly-ast-use-context -Cllvm-args=--polly-dependences-use-reductions -Cllvm-args=--polly-detect-reductions -Cllvm-args=--polly-enable-simplify -Cllvm-args=--polly-vectorizer=stripmine -Cllvm-args=--polly-run-dce -Cllvm-args=--polly-tiling -Cllvm-args=--polly-2nd-level-tiling -Cllvm-args=--polly-register-tiling -Cllvm-args=--polly-reschedule -Cllvm-args=--polly-postopts -Cllvm-args=--polly-enable-prune-unprofitable"
_rllvm="-Cllvm-args=--enable-gvn-hoist -Cllvm-args=--enable-cond-stores-vec -Cllvm-args=--slp-vectorize-hor-store -Cllvm-args=--enable-loopinterchange -Cllvm-args=--enable-loop-distribute -Cllvm-args=--enable-unroll-and-jam -Cllvm-args=--enable-loop-flatten -Cllvm-args=--unroll-runtime-multi-exit -Cllvm-args=--aggressive-ext-opt -Cllvm-args=--vectorize-loops -Cllvm-args=--vectorize-slp -Cllvm-args=--extra-vectorizer-passes -Cllvm-args=--enable-masked-interleaved-mem-accesses -Cllvm-args=--isel-rebalance-addr -Cllvm-args=--loop-fusion-dependence-analysis=all -Cllvm-args=--loop-flatten-widen-iv" 

CPPFLAGS="-D_FORTIFY_SOURCE=2"
CFLAGS="$_compiler $_custom_cflags"
CXXFLAGS="$_compiler $_custom_cxxflags -std=c++17"
LDFLAGS="$_linker $_custom_ldflags $_llvm_lld $_polly_lld"
# RUST 
RUSTFLAGS="-C opt-level=3 -C embed-bitcode=yes -C lto=thin -Clinker-plugin-lto -C codegen-units=1 -C linker=clang -Clink-arg=-fuse-ld=lld $_custom_rustc $_ldrust $_rllvm $_rpoly"

# QMAKE
QMAKESPEC=linux-clang

MAKEFLAGS="-j$(nproc)"
NINJAFLAGS="-j$(nproc)"

LTOFLAGS="-flto=thin -funified-lto -ffat-lto-objects"
DEBUG_CFLAGS="-g"
DEBUG_CXXFLAGS="$DEBUG_CFLAGS"

#########################################################################
# BUILD ENVIRONMENT
#########################################################################
#
# Makepkg defaults: BUILDENV=(!distcc !color !ccache check !sign)
#  A negated environment option will do the opposite of the comments below.
#
#-- distcc:   Use the Distributed C/C++/ObjC compiler
#-- color:    Colorize output messages
#-- ccache:   Use ccache to cache compilation
#-- check:    Run the check() function if present in the PKGBUILD
#-- sign:     Generate PGP signature file
#
BUILDENV=(!distcc color !ccache check !sign)
#
#-- If using DistCC, your MAKEFLAGS will also need modification. In addition,
#-- specify a space-delimited list of hosts running in the DistCC cluster.
#DISTCC_HOSTS=""
#
#-- Specify a directory for package building.
#BUILDDIR=/tmp/makepkg

#########################################################################
# GLOBAL PACKAGE OPTIONS
#   These are default values for the options=() settings
#########################################################################
#
# Makepkg defaults: OPTIONS=(!strip docs libtool staticlibs emptydirs !zipman !purge !debug !lto !autodeps)
#  A negated option will do the opposite of the comments below.
#
#-- strip:      Strip symbols from binaries/libraries
#-- docs:       Save doc directories specified by DOC_DIRS
#-- libtool:    Leave libtool (.la) files in packages
#-- staticlibs: Leave static library (.a) files in packages
#-- emptydirs:  Leave empty directories in packages
#-- zipman:     Compress manual (man and info) pages in MAN_DIRS with gzip
#-- purge:      Remove files specified by PURGE_TARGETS
#-- debug:      Add debugging flags as specified in DEBUG_* variables
#-- lto:        Add compile flags for building with link time optimization
#-- autodeps:   Automatically add depends/provides
#
OPTIONS=(strip docs !libtool !staticlibs emptydirs zipman purge !debug lto)

#-- File integrity checks to use. Valid: md5, sha1, sha224, sha256, sha384, sha512, b2
INTEGRITY_CHECK=(sha256)
#-- Options to be used when stripping binaries. See `man strip' for details.
STRIP_BINARIES="--strip-all"
#-- Options to be used when stripping shared libraries. See `man strip' for details.
STRIP_SHARED="--strip-unneeded"
#-- Options to be used when stripping static libraries. See `man strip' for details.
STRIP_STATIC="--strip-debug"
#-- Manual (man and info) directories to compress (if zipman is specified)
MAN_DIRS=({usr{,/local}{,/share},opt/*}/{man,info})
#-- Doc directories to remove (if !docs is specified)
DOC_DIRS=(usr/{,local/}{,share/}{doc,gtk-doc} opt/*/{doc,gtk-doc})
#-- Files to be removed from all packages (if purge is specified)
PURGE_TARGETS=(usr/{,share}/info/dir .packlist *.pod)
#-- Directory to store source code in for debug packages
DBGSRCDIR="/usr/src/debug"
#-- Prefix and directories for library autodeps
LIB_DIRS=('lib:usr/lib' 'lib32:usr/lib32')

#########################################################################
# PACKAGE OUTPUT
#########################################################################
#
# Default: put built package and cached source in build directory
#
#-- Destination: specify a fixed directory where all packages will be placed
#PKGDEST=/home/packages
#-- Source cache: specify a fixed directory where source files will be cached
#SRCDEST=/home/sources
#-- Source packages: specify a fixed directory where all src packages will be placed
#SRCPKGDEST=/home/srcpackages
#-- Log files: specify a fixed directory where all log files will be placed
#LOGDEST=/home/makepkglogs
#-- Packager: name/email of the person or organization building packages
PACKAGER="JPratama7 <josepratama080@gmail.com>"
#-- Specify a key to use for package signing
# GPGKEY=""

#########################################################################
# COMPRESSION DEFAULTS
#########################################################################
#
COMPRESSGZ=(gzip -c -f -n)
COMPRESSBZ2=(bzip2 -c -f)
COMPRESSXZ=(xz -c -z -)
COMPRESSZST=(zstd -c -T0 --ultra -22 -)
COMPRESSLRZ=(lrzip -q)
COMPRESSLZO=(lzop -q)
COMPRESSZ=(compress -c -f)
COMPRESSLZ4=(lz4 -q)
COMPRESSLZ=(lzip -c -f)

#########################################################################
# EXTENSION DEFAULTS
#########################################################################
#
PKGEXT='.pkg.tar.zst'
SRCEXT='.src.tar.gz'

#########################################################################
# OTHER
#########################################################################
#
#-- Command used to run pacman as root, instead of trying sudo and su
#PACMAN_AUTH=()
# vim: set ft=sh ts=2 sw=2 et: